Launching pytest with arguments test_serialinterface.py::Test_Serial_Interface --no-header --no-summary -q in C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests

##teamcity[enteredTheMatrix timestamp='2022-07-06T15:30:55.506']
============================= test session starts =============================
collecting ... collected 10 items
##teamcity[testCount timestamp='2022-07-06T15:30:55.541' count='10']

test_serialinterface.py::Test_Serial_Interface::test_digital_batfish ##teamcity[testSuiteStarted timestamp='2022-07-06T15:30:55.544' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface' name='test_serialinterface' nodeId='1' parentNodeId='0']
##teamcity[testSuiteStarted timestamp='2022-07-06T15:30:55.545' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface' name='Test_Serial_Interface' nodeId='2' parentNodeId='1']
##teamcity[testStarted timestamp='2022-07-06T15:30:55.545' captureStandardOutput='false' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_digital_batfish' metainfo='test_digital_batfish' name='test_digital_batfish' nodeId='3' parentNodeId='2']
##teamcity[blockOpened timestamp='2022-07-06T15:30:55.717' flowId='test_serialinterface.Test_Serial_Interface.test_digital_batfish' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test setup' name='test setup' nodeId='3' parentNodeId='2']
##teamcity[testStdOut timestamp='2022-07-06T15:30:55.718' flowId='test_serialinterface.Test_Serial_Interface.test_digital_batfish' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_digital_batfish' name='test_digital_batfish' nodeId='3' out='You successfully connected to the COM Port|n' parentNodeId='2']
PASSED [ 10%]##teamcity[testFinished timestamp='2022-07-06T15:31:04.849' duration='9131' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_digital_batfish' name='test_digital_batfish' nodeId='3' parentNodeId='2']

test_serialinterface.py::Test_Serial_Interface::test_adc_batfish ##teamcity[testStarted timestamp='2022-07-06T15:31:04.853' captureStandardOutput='false' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_adc_batfish' metainfo='test_adc_batfish' name='test_adc_batfish' nodeId='4' parentNodeId='2']
FAILED  [ 20%]##teamcity[testStdOut timestamp='2022-07-06T15:31:14.246' flowId='test_serialinterface.Test_Serial_Interface.test_adc_batfish' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_adc_batfish' name='test_adc_batfish' nodeId='4' out='|n    R2  R3A  R3B  R1R  R2R  R1S  IaRaw  IbRaw  OffsetRaw  Vcoil  VprQ8  InRef  \|nR1                                                                              |n0    1    1    0    0    0    0   2047   2044       2047   3629   5889   1511   |n0    1    0    0    0    0    0   2046   2045       2045   3628   5885   1511   |n0    1    0    1    0    0    1   2046   2047       2047   3627   5887   1511   |n1    1    0    1    1    1    0   2047   2044       2046   3628   5887   1513   |n1    1    0    0    1    0    0   2046   2045       2047   3626   5885   1510   |n0    0    0    1    1    1    1   2047   2044       2045   3628   5885   1511   |n1    1    0    1    1    0    1   2047   2045       2046   3627   5889   1512   |n1    1    0    0    0    1    0   2047   2045       2047   3627   5889   1514   |n1    1    0    1    1    1    0   2047   2045       2047   3627   5887   1515   |n0    1    1    1    1    1    0   2046   2046       2047   3627   5889   1510   |n0    1    1    1    0    0    0   2047   2045       2047   3627   5885   1511   |n1    1    0    1    1    1    1   2046   2045       2047   3628   5885   1511   |n1    0    1    1    1    1    1   2047   2045       2045   3627   5885   1510   |n0    0    1    1    0    0    0   2047   2045       2046   3628   5889   1512   |n2    0    0    0    0    1    1   2046   2044       2047   3627   5889   1511   |n0    1    1    1    1    1    0   2047   2045       2047   3628   5889   1511   |n0    1    0    1    1    2    1   2047   2047       2046   3626   5885   1512   |n0    0    1    1    1    2    1   2045   2045       2045   3628   5883   1510   |n0    0    0    1    1    1    0   2047   2045       2047   3627   5885   1510   |n1    0    1    0    0    0    1   2047   2047       2047   3628   5885   1512   |n|n    InTmp  ThMem  VrlQ8  |nR1                       |n0     928    106   5933  |n0     929    105   5933  |n0     929    106   5932  |n1     928    105   5933  |n1     929    106   5933  |n0     929    106   5935  |n1     929    106   5933  |n1     929    105   5933  |n1     929    104   5933  |n0     928    108   5935  |n0     928    105   5935  |n1     928    104   5935  |n1     930    105   5935  |n0     928    105   5932  |n2     930    105   5935  |n0     929    105   5933  |n0     929    105   5935  |n0     928    105   5933  |n0     929    104   5933  |n1     928    106   5933  |nC:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt\CSVs\adc.csv|n' parentNodeId='2']
##teamcity[testFailed timestamp='2022-07-06T15:31:14.247' actual='1' details='self = <test_serialinterface.Test_Serial_Interface object at 0x0000011DE9B07790>|nfixture_putty_serial = <Framework.HIT_Putty_Interface.HIT_Interface object at 0x0000011DE9B60310>|n|n    def test_adc_batfish(self, fixture_putty_serial):|n        """|n        This is a test to test the adc component of the hard integration testing|n        :param fixture_putty_remote_psu_reset:|n        :param fixture_putty_serial:|n        :return:|n        """|n        loops = 20|n        delay_per_cycle = 20|n        fixture_putty_serial.adc_user_interface(loops, delay_per_cycle)|n        df = pd.read_csv(find_path(|'adc.csv|'))|n>       assert df.loc|[3|]|[|'R1|'|] == 3|nE       assert 1 == 3|n|ntest_serialinterface.py:39: AssertionError' expected='3' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_adc_batfish' message='test_serialinterface.py:27 (Test_Serial_Interface.test_adc_batfish)|n1 != 3|n' name='test_adc_batfish' nodeId='4' parentNodeId='2' type='comparisonFailure']
##teamcity[testFinished timestamp='2022-07-06T15:31:14.247' duration='9154' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_adc_batfish' name='test_adc_batfish' nodeId='4' parentNodeId='2']

test_serialinterface.py::Test_Serial_Interface::test_switch_user_interface ##teamcity[testStarted timestamp='2022-07-06T15:31:14.252' captureStandardOutput='false' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_switch_user_interface' metainfo='test_switch_user_interface' name='test_switch_user_interface' nodeId='5' parentNodeId='2']
PASSED [ 30%]##teamcity[testStdOut timestamp='2022-07-06T15:31:35.480' flowId='test_serialinterface.Test_Serial_Interface.test_switch_user_interface' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_switch_user_interface' name='test_switch_user_interface' nodeId='5' out='|nEmpty DataFrame|nColumns: |[|]|nIndex: |[12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12|]|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt\CSVs\switch.csv|n' parentNodeId='2']
##teamcity[testFinished timestamp='2022-07-06T15:31:35.481' duration='21226' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_switch_user_interface' name='test_switch_user_interface' nodeId='5' parentNodeId='2']

test_serialinterface.py::Test_Serial_Interface::test_temp_user_interface ##teamcity[testStarted timestamp='2022-07-06T15:31:35.486' captureStandardOutput='false' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_temp_user_interface' metainfo='test_temp_user_interface' name='test_temp_user_interface' nodeId='6' parentNodeId='2']
SKIPPED (unconditional skip) [ 40%]##teamcity[testIgnored timestamp='2022-07-06T15:31:35.489' flowId='test_serialinterface.Test_Serial_Interface.test_temp_user_interface' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_temp_user_interface' message='Skipped: unconditional skip' name='test_temp_user_interface' nodeId='6' parentNodeId='2']
##teamcity[testFinished timestamp='2022-07-06T15:31:35.490' duration='1' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_temp_user_interface' name='test_temp_user_interface' nodeId='6' parentNodeId='2']

test_serialinterface.py::Test_Serial_Interface::test_snapshot_user_interface ##teamcity[testStarted timestamp='2022-07-06T15:31:35.491' captureStandardOutput='false' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_snapshot_user_interface' metainfo='test_snapshot_user_interface' name='test_snapshot_user_interface' nodeId='7' parentNodeId='2']
PASSED [ 50%]##teamcity[testStdOut timestamp='2022-07-06T15:31:38.614' flowId='test_serialinterface.Test_Serial_Interface.test_snapshot_user_interface' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_snapshot_user_interface' name='test_snapshot_user_interface' nodeId='7' out='|n              InternalTempRaw   TripCapVoltage   ThermalMemory   Fla2SwRaw   \|nInternalRef                                                                   |n0                            0                0               0           0   |n|n              Fla1SwRaw   RailVoltage   ConfigSwRaw   |nInternalRef                                           |n0                      0             0             0  |nC:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt\CSVs\snapshot.csv|n' parentNodeId='2']
##teamcity[testFinished timestamp='2022-07-06T15:31:38.615' duration='3119' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_snapshot_user_interface' name='test_snapshot_user_interface' nodeId='7' parentNodeId='2']

test_serialinterface.py::Test_Serial_Interface::test_bucket_user_interface ##teamcity[testStarted timestamp='2022-07-06T15:31:38.621' captureStandardOutput='false' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_bucket_user_interface' metainfo='test_bucket_user_interface' name='test_bucket_user_interface' nodeId='8' parentNodeId='2']
FAILED [ 60%]##teamcity[testStdOut timestamp='2022-07-06T15:31:52.002' flowId='test_serialinterface.Test_Serial_Interface.test_bucket_user_interface' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_bucket_user_interface' name='test_bucket_user_interface' nodeId='8' out='|n        AvgUncompensatedRms   HardComp%Good:|nIndex                                       |n0                        59                0|n1                         1                0|n2                         0                0|n3                         0                0|n4                         0                0|n5                         0                0|n6                         0                0|n7                         0                0|n8                         0                0|n9                         0                0|n10                        0                0|n11                        0                0|n12                        0                0|n13                        0                0|n14                        0                0|n15                        0                0|n16                        0                0|n17                        0                0|n18                        0                0|n19                        0                0|n20                        0                0|n21                        0                0|n22                        0                0|n23                        0                0|n24                        0                0|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt\CSVs\bucket.csv|n' parentNodeId='2']
##teamcity[testFailed timestamp='2022-07-06T15:31:52.005' details='self = Index(|[|'Index|', |' AvgUncompensatedRms|', |' HardComp%Good:|'|], dtype=|'object|')|nkey = |'AvgUncompensatedRms|', method = None, tolerance = None|n|n    def get_loc(self, key, method=None, tolerance=None):|n        """|n        Get integer location, slice or boolean mask for requested label.|n    |n        Parameters|n        ----------|n        key : label|n        method : {None, |'pad|'/|'ffill|', |'backfill|'/|'bfill|', |'nearest|'}, optional|n            * default: exact matches only.|n            * pad / ffill: find the PREVIOUS index value if no exact match.|n            * backfill / bfill: use NEXT index value if no exact match|n            * nearest: use the NEAREST index value if no exact match. Tied|n              distances are broken by preferring the larger index value.|n        tolerance : int or float, optional|n            Maximum distance from index value for inexact matches. The value of|n            the index at the matching location must satisfy the equation|n            ``abs(index|[loc|] - key) <= tolerance``.|n    |n        Returns|n        -------|n        loc : int if unique index, slice if monotonic index, else mask|n    |n        Examples|n        --------|n        >>> unique_index = pd.Index(list(|'abc|'))|n        >>> unique_index.get_loc(|'b|')|n        1|n    |n        >>> monotonic_index = pd.Index(list(|'abbc|'))|n        >>> monotonic_index.get_loc(|'b|')|n        slice(1, 3, None)|n    |n        >>> non_monotonic_index = pd.Index(list(|'abcb|'))|n        >>> non_monotonic_index.get_loc(|'b|')|n        array(|[False,  True, False,  True|])|n        """|n        if method is None:|n            if tolerance is not None:|n                raise ValueError(|n                    "tolerance argument only valid if using pad, "|n                    "backfill or nearest lookups"|n                )|n            casted_key = self._maybe_cast_indexer(key)|n            try:|n>               return self._engine.get_loc(casted_key)|n|n..\venv\lib\site-packages\pandas\core\indexes\base.py:3621: |n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|n|n>   ???|n|npandas\_libs\index.pyx:136: |n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|n|n>   ???|n|npandas\_libs\index.pyx:163: |n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|n|n>   ???|n|npandas\_libs\hashtable_class_helper.pxi:5198: |n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|n|n>   ???|nE   KeyError: |'AvgUncompensatedRms|'|n|npandas\_libs\hashtable_class_helper.pxi:5206: KeyError|n|nThe above exception was the direct cause of the following exception:|n|nself = <test_serialinterface.Test_Serial_Interface object at 0x0000011DE9B06FE0>|nfixture_putty_serial = <Framework.HIT_Putty_Interface.HIT_Interface object at 0x0000011DE9B60310>|n|n    def test_bucket_user_interface(self, fixture_putty_serial):|n        loops = 20|n        delay_per_cycle = 20|n        fixture_putty_serial.bucket_user_interface(loops, delay_per_cycle)|n        df = pd.read_csv(find_path(|'bucket.csv|'))|n>       assert df.loc|[0|]|["AvgUncompensatedRms"|] == 120|n|ntest_serialinterface.py:64: |n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|n..\venv\lib\site-packages\pandas\core\series.py:958: in __getitem__|n    return self._get_value(key)|n..\venv\lib\site-packages\pandas\core\series.py:1069: in _get_value|n    loc = self.index.get_loc(label)|n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|n|nself = Index(|[|'Index|', |' AvgUncompensatedRms|', |' HardComp%Good:|'|], dtype=|'object|')|nkey = |'AvgUncompensatedRms|', method = None, tolerance = None|n|n    def get_loc(self, key, method=None, tolerance=None):|n        """|n        Get integer location, slice or boolean mask for requested label.|n    |n        Parameters|n        ----------|n        key : label|n        method : {None, |'pad|'/|'ffill|', |'backfill|'/|'bfill|', |'nearest|'}, optional|n            * default: exact matches only.|n            * pad / ffill: find the PREVIOUS index value if no exact match.|n            * backfill / bfill: use NEXT index value if no exact match|n            * nearest: use the NEAREST index value if no exact match. Tied|n              distances are broken by preferring the larger index value.|n        tolerance : int or float, optional|n            Maximum distance from index value for inexact matches. The value of|n            the index at the matching location must satisfy the equation|n            ``abs(index|[loc|] - key) <= tolerance``.|n    |n        Returns|n        -------|n        loc : int if unique index, slice if monotonic index, else mask|n    |n        Examples|n        --------|n        >>> unique_index = pd.Index(list(|'abc|'))|n        >>> unique_index.get_loc(|'b|')|n        1|n    |n        >>> monotonic_index = pd.Index(list(|'abbc|'))|n        >>> monotonic_index.get_loc(|'b|')|n        slice(1, 3, None)|n    |n        >>> non_monotonic_index = pd.Index(list(|'abcb|'))|n        >>> non_monotonic_index.get_loc(|'b|')|n        array(|[False,  True, False,  True|])|n        """|n        if method is None:|n            if tolerance is not None:|n                raise ValueError(|n                    "tolerance argument only valid if using pad, "|n                    "backfill or nearest lookups"|n                )|n            casted_key = self._maybe_cast_indexer(key)|n            try:|n                return self._engine.get_loc(casted_key)|n            except KeyError as err:|n>               raise KeyError(key) from err|nE               KeyError: |'AvgUncompensatedRms|'|n|n..\venv\lib\site-packages\pandas\core\indexes\base.py:3623: KeyError' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_bucket_user_interface' message='test_serialinterface.py:58 (Test_Serial_Interface.test_bucket_user_interface)' name='test_bucket_user_interface' nodeId='8' parentNodeId='2']
##teamcity[testFinished timestamp='2022-07-06T15:31:52.020' duration='13145' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_bucket_user_interface' name='test_bucket_user_interface' nodeId='8' parentNodeId='2']

test_serialinterface.py::Test_Serial_Interface::test_eeprom_user_interface ##teamcity[testStarted timestamp='2022-07-06T15:31:52.022' captureStandardOutput='false' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_eeprom_user_interface' metainfo='test_eeprom_user_interface' name='test_eeprom_user_interface' nodeId='9' parentNodeId='2']
PASSED [ 70%]##teamcity[testStdOut timestamp='2022-07-06T15:31:57.101' flowId='test_serialinterface.Test_Serial_Interface.test_eeprom_user_interface' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_eeprom_user_interface' name='test_eeprom_user_interface' nodeId='9' out='|n           Value State|nParameter             |n0          12288  GOOD|n1              0  GOOD|n2              0  GOOD|n3              0  GOOD|n4              0  GOOD|n5              0  GOOD|n6            100  GOOD|n7              1  GOOD|n8            100  GOOD|n9              1  GOOD|n10             0  GOOD|n11             0  GOOD|n12             0  GOOD|n13           100  GOOD|n14             1  GOOD|n15           100  GOOD|n16             1  GOOD|n17           150  GOOD|n18            66  GOOD|n19             1  GOOD|n20            90  GOOD|n21             0  GOOD|n22             0  GOOD|n23             0  GOOD|n24             1  GOOD|n25          1697  GOOD|n26             8  GOOD|n27           180  GOOD|n28          1000  GOOD|n29          1200  GOOD|n30           300  GOOD|n31           140  GOOD|n32          1000  GOOD|n33          3000  GOOD|n34            85  GOOD|n35          1000  GOOD|n36          1000  GOOD|n37           900  GOOD|n38         20000  GOOD|n39             0  GOOD|n40             0  GOOD|n41         12288  GOOD|n42            90  GOOD|n43          3000  GOOD|n44             7  GOOD|n45          1000  GOOD|n46           213  GOOD|n47          1408  GOOD|n48           500  GOOD|n49         15000  GOOD|n50            25  GOOD|n51           450  GOOD|n52            35  GOOD|n53           100  GOOD|n54             7  GOOD|n55         20480  GOOD|n56             0  GOOD|n57          1364  GOOD|n58          1000  GOOD|n59             0  GOOD|n60             0  GOOD|n61             0  GOOD|n62             0  GOOD|n63             0  GOOD|n64             0  GOOD|n65             0  GOOD|n66             0  GOOD|n67           100  GOOD|n68             0  GOOD|n69          2104  GOOD|n70             0  GOOD|n71             0  GOOD|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt\CSVs\eeprom.csv|n' parentNodeId='2']
##teamcity[testFinished timestamp='2022-07-06T15:31:57.102' duration='5077' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_eeprom_user_interface' name='test_eeprom_user_interface' nodeId='9' parentNodeId='2']

test_serialinterface.py::Test_Serial_Interface::test_version_user_interface ##teamcity[testStarted timestamp='2022-07-06T15:31:57.103' captureStandardOutput='false' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_version_user_interface' metainfo='test_version_user_interface' name='test_version_user_interface' nodeId='10' parentNodeId='2']
FAILED [ 80%]##teamcity[testStdOut timestamp='2022-07-06T15:32:00.191' flowId='test_serialinterface.Test_Serial_Interface.test_version_user_interface' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_version_user_interface' name='test_version_user_interface' nodeId='10' out='|[|'|'|]|n|[|'Version|', |' 0.7.7 Series 0|'|]|n|[|'|'|]|n|[|'Enter Test-> |'|]|n|nEmpty DataFrame|nColumns: |[|]|nIndex: |[ 0.7.7 Series 0|]|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt|nC:\Users\RMartin10\PycharmProjects\Rasheedattempt\CSVs\version.csv|n' parentNodeId='2']
##teamcity[testFailed timestamp='2022-07-06T15:32:00.191' actual='|' 0.7.7 Series 0|'' details='self = <test_serialinterface.Test_Serial_Interface object at 0x0000011DE9B06AA0>|nfixture_putty_serial = <Framework.HIT_Putty_Interface.HIT_Interface object at 0x0000011DE9B60310>|n|n    def test_version_user_interface(self, fixture_putty_serial):|n        fixture_putty_serial.version_user_interface()|n        df = pd.read_csv(find_path(|'version.csv|'))|n>       assert df.loc|[0|]|[0|] == |'0.7.7 Series 0|'|nE       AssertionError: assert |' 0.7.7 Series 0|' == |'0.7.7 Series 0|'|nE         - 0.7.7 Series 0|nE         +  0.7.7 Series 0|nE         ? +|n|ntest_serialinterface.py:74: AssertionError' expected='|'0.7.7 Series 0|'' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_version_user_interface' message='test_serialinterface.py:70 (Test_Serial_Interface.test_version_user_interface)|n|' 0.7.7 Series 0|' != |'0.7.7 Series 0|'|n' name='test_version_user_interface' nodeId='10' parentNodeId='2' type='comparisonFailure']
##teamcity[testFinished timestamp='2022-07-06T15:32:00.191' duration='3080' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_version_user_interface' name='test_version_user_interface' nodeId='10' parentNodeId='2']

test_serialinterface.py::Test_Serial_Interface::test_stack_user_interface ##teamcity[testStarted timestamp='2022-07-06T15:32:00.194' captureStandardOutput='false' locationHint='python<C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Tests>://test_serialinterface.Test_Serial_Interface.test_stack_user_interface' metainfo='test_stack_user_interface' name='test_stack_user_interface' nodeId='11' parentNodeId='2']


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! KeyboardInterrupt !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C:\Users\RMartin10\PycharmProjects\Rasheedattempt\Framework\HIT_Putty_Interface.py:93: KeyboardInterrupt
(to show a full traceback on KeyboardInterrupt use --full-trace)
============== 3 failed, 4 passed, 1 skipped in 66.36s (0:01:06) ==============
